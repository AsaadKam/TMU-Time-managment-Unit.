
TMU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000978  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00000978  00000a0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000015  00800072  00800072  00000a1e  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00000a1e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a30  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00000a70  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d13  00000000  00000000  00000b98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000089b  00000000  00000000  000018ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ca2  00000000  00000000  00002146  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000114  00000000  00000000  00002de8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000046e  00000000  00000000  00002efc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001fc  00000000  00000000  0000336a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003566  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e7       	ldi	r30, 0x78	; 120
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 37       	cpi	r26, 0x72	; 114
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 e7       	ldi	r26, 0x72	; 114
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a7 38       	cpi	r26, 0x87	; 135
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 64 00 	call	0xc8	; 0xc8 <main>
  8a:	0c 94 ba 04 	jmp	0x974	; 0x974 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <print>:
#include<assert.h>


void print(void)
{
	printf("print");
  92:	80 e6       	ldi	r24, 0x60	; 96
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	9f 93       	push	r25
  98:	8f 93       	push	r24
  9a:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <printf>
}
  9e:	0f 90       	pop	r0
  a0:	0f 90       	pop	r0
  a2:	08 95       	ret

000000a4 <get>:
void get(void)
{
	printf("get");
  a4:	86 e6       	ldi	r24, 0x66	; 102
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	9f 93       	push	r25
  aa:	8f 93       	push	r24
  ac:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <printf>
}
  b0:	0f 90       	pop	r0
  b2:	0f 90       	pop	r0
  b4:	08 95       	ret

000000b6 <send>:
void send(void)
{
	printf("send");
  b6:	8a e6       	ldi	r24, 0x6A	; 106
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	9f 93       	push	r25
  bc:	8f 93       	push	r24
  be:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <printf>
}
  c2:	0f 90       	pop	r0
  c4:	0f 90       	pop	r0
  c6:	08 95       	ret

000000c8 <main>:
int main()
{
	/****TMU Initiate****/
	
	/****TMU start ****/
	assert(TMU_Start(print,5)==Error_OK);
  c8:	65 e0       	ldi	r22, 0x05	; 5
  ca:	70 e0       	ldi	r23, 0x00	; 0
  cc:	89 e4       	ldi	r24, 0x49	; 73
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	0e 94 b1 00 	call	0x162	; 0x162 <TMU_Start>
  d4:	81 11       	cpse	r24, r1
  d6:	33 c0       	rjmp	.+102    	; 0x13e <main+0x76>
	assert(TMU_Start(get,3)==Error_OK);
  d8:	63 e0       	ldi	r22, 0x03	; 3
  da:	70 e0       	ldi	r23, 0x00	; 0
  dc:	82 e5       	ldi	r24, 0x52	; 82
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	0e 94 b1 00 	call	0x162	; 0x162 <TMU_Start>
  e4:	81 11       	cpse	r24, r1
  e6:	2d c0       	rjmp	.+90     	; 0x142 <main+0x7a>
	assert(TMU_Start(send,7)==Error_OK);
  e8:	67 e0       	ldi	r22, 0x07	; 7
  ea:	70 e0       	ldi	r23, 0x00	; 0
  ec:	8b e5       	ldi	r24, 0x5B	; 91
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	0e 94 b1 00 	call	0x162	; 0x162 <TMU_Start>
  f4:	81 11       	cpse	r24, r1
  f6:	27 c0       	rjmp	.+78     	; 0x146 <main+0x7e>
	assert(TMU_Stop(print)==Error_OK);
  f8:	89 e4       	ldi	r24, 0x49	; 73
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	0e 94 55 01 	call	0x2aa	; 0x2aa <TMU_Stop>
 100:	81 11       	cpse	r24, r1
 102:	23 c0       	rjmp	.+70     	; 0x14a <main+0x82>
/*    while(1)
	{*/
		/***TMU  dispatch ***/
		assert(TMU_Dispatch()==Error_OK   );
 104:	0e 94 cb 00 	call	0x196	; 0x196 <TMU_Dispatch>
 108:	81 11       	cpse	r24, r1
 10a:	21 c0       	rjmp	.+66     	; 0x14e <main+0x86>
	    assert(TMU_Stop(get)==Error_OK); 
 10c:	82 e5       	ldi	r24, 0x52	; 82
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	0e 94 55 01 	call	0x2aa	; 0x2aa <TMU_Stop>
 114:	81 11       	cpse	r24, r1
 116:	1d c0       	rjmp	.+58     	; 0x152 <main+0x8a>
		assert(TMU_Dispatch()==Error_OK   );
 118:	0e 94 cb 00 	call	0x196	; 0x196 <TMU_Dispatch>
 11c:	81 11       	cpse	r24, r1
 11e:	1b c0       	rjmp	.+54     	; 0x156 <main+0x8e>
	    assert(TMU_Start(get,3)==Error_OK);	
 120:	63 e0       	ldi	r22, 0x03	; 3
 122:	70 e0       	ldi	r23, 0x00	; 0
 124:	82 e5       	ldi	r24, 0x52	; 82
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	0e 94 b1 00 	call	0x162	; 0x162 <TMU_Start>
 12c:	81 11       	cpse	r24, r1
 12e:	15 c0       	rjmp	.+42     	; 0x15a <main+0x92>
		assert(TMU_Dispatch()==Error_OK   );		
 130:	0e 94 cb 00 	call	0x196	; 0x196 <TMU_Dispatch>
 134:	81 11       	cpse	r24, r1
 136:	13 c0       	rjmp	.+38     	; 0x15e <main+0x96>
/*	}*/
}
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	08 95       	ret
	assert(TMU_Start(print,5)==Error_OK);
 13e:	0e 94 e7 01 	call	0x3ce	; 0x3ce <abort>
	assert(TMU_Start(get,3)==Error_OK);
 142:	0e 94 e7 01 	call	0x3ce	; 0x3ce <abort>
	assert(TMU_Start(send,7)==Error_OK);
 146:	0e 94 e7 01 	call	0x3ce	; 0x3ce <abort>
	assert(TMU_Stop(print)==Error_OK);
 14a:	0e 94 e7 01 	call	0x3ce	; 0x3ce <abort>
		assert(TMU_Dispatch()==Error_OK   );
 14e:	0e 94 e7 01 	call	0x3ce	; 0x3ce <abort>
	    assert(TMU_Stop(get)==Error_OK); 
 152:	0e 94 e7 01 	call	0x3ce	; 0x3ce <abort>
		assert(TMU_Dispatch()==Error_OK   );
 156:	0e 94 e7 01 	call	0x3ce	; 0x3ce <abort>
	    assert(TMU_Start(get,3)==Error_OK);	
 15a:	0e 94 e7 01 	call	0x3ce	; 0x3ce <abort>
		assert(TMU_Dispatch()==Error_OK   );		
 15e:	0e 94 e7 01 	call	0x3ce	; 0x3ce <abort>

00000162 <TMU_Start>:
u8 Start_flag;


u8 TMU_Start(void(*PntrToFunc)(void),u16 Periodicity_MS)
{
    Start_flag=1;
 162:	21 e0       	ldi	r18, 0x01	; 1
 164:	20 93 80 00 	sts	0x0080, r18	; 0x800080 <Start_flag>
	
	if(index>TMU_Events-1) return Error_NOK;
 168:	20 91 73 00 	lds	r18, 0x0073	; 0x800073 <index>
 16c:	23 30       	cpi	r18, 0x03	; 3
 16e:	88 f4       	brcc	.+34     	; 0x192 <TMU_Start+0x30>
	
	else
	{		
	
		TMU_Events_Array[index].PntrToFunc=PntrToFunc;	
 170:	e2 2f       	mov	r30, r18
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	ee 0f       	add	r30, r30
 176:	ff 1f       	adc	r31, r31
 178:	ee 0f       	add	r30, r30
 17a:	ff 1f       	adc	r31, r31
 17c:	ec 58       	subi	r30, 0x8C	; 140
 17e:	ff 4f       	sbci	r31, 0xFF	; 255
 180:	82 83       	std	Z+2, r24	; 0x02
 182:	93 83       	std	Z+3, r25	; 0x03
		TMU_Events_Array[index].Periodicity_MS=Periodicity_MS;
 184:	60 83       	st	Z, r22
 186:	71 83       	std	Z+1, r23	; 0x01

		index++;
 188:	2f 5f       	subi	r18, 0xFF	; 255
 18a:	20 93 73 00 	sts	0x0073, r18	; 0x800073 <index>
		return Error_OK;
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	08 95       	ret
	if(index>TMU_Events-1) return Error_NOK;
 192:	81 e0       	ldi	r24, 0x01	; 1
	
	}
}
 194:	08 95       	ret

00000196 <TMU_Dispatch>:


u8 TMU_Dispatch(void)
{
 196:	0f 93       	push	r16
 198:	1f 93       	push	r17
 19a:	cf 93       	push	r28

	/***When Start_Stop_flag=0 ,we initialize the rearrange the queue.***/
    if(1U==Start_flag)
 19c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <Start_flag>
 1a0:	81 30       	cpi	r24, 0x01	; 1
 1a2:	49 f0       	breq	.+18     	; 0x1b6 <TMU_Dispatch+0x20>
	    printf("\n");
	}
	/***When Start_Stop_flag=1 ,we we will start the real managment by ***/
	else 
	{
	    for(u8 i=0;i<index-1;i++)
 1a4:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <index>
 1a8:	c0 e0       	ldi	r28, 0x00	; 0
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	20 e0       	ldi	r18, 0x00	; 0
 1ae:	82 30       	cpi	r24, 0x02	; 2
 1b0:	08 f0       	brcs	.+2      	; 0x1b4 <TMU_Dispatch+0x1e>
 1b2:	5d c0       	rjmp	.+186    	; 0x26e <TMU_Dispatch+0xd8>
 1b4:	4d c0       	rjmp	.+154    	; 0x250 <TMU_Dispatch+0xba>
		Start_flag=0U;
 1b6:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <Start_flag>
        for(s8 j=0,i=(index-1)-j;i>=0;j++,i--)
 1ba:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <index>
 1be:	81 50       	subi	r24, 0x01	; 1
 1c0:	c2 f0       	brmi	.+48     	; 0x1f2 <TMU_Dispatch+0x5c>
 1c2:	94 e0       	ldi	r25, 0x04	; 4
 1c4:	89 02       	muls	r24, r25
 1c6:	f0 01       	movw	r30, r0
 1c8:	11 24       	eor	r1, r1
 1ca:	e0 59       	subi	r30, 0x90	; 144
 1cc:	ff 4f       	sbci	r31, 0xFF	; 255
 1ce:	04 c0       	rjmp	.+8      	; 0x1d8 <TMU_Dispatch+0x42>
 1d0:	81 50       	subi	r24, 0x01	; 1
 1d2:	34 97       	sbiw	r30, 0x04	; 4
 1d4:	88 23       	and	r24, r24
 1d6:	6c f0       	brlt	.+26     	; 0x1f2 <TMU_Dispatch+0x5c>
			if(TMU_Events_Array[i-1].Periodicity_MS>TMU_Events_Array[i].Periodicity_MS)
 1d8:	40 81       	ld	r20, Z
 1da:	51 81       	ldd	r21, Z+1	; 0x01
 1dc:	24 81       	ldd	r18, Z+4	; 0x04
 1de:	35 81       	ldd	r19, Z+5	; 0x05
 1e0:	24 17       	cp	r18, r20
 1e2:	35 07       	cpc	r19, r21
 1e4:	a8 f7       	brcc	.-22     	; 0x1d0 <TMU_Dispatch+0x3a>
				TMU_Events_Array[i].Periodicity_MS=TMU_Events_Array[i-1].Periodicity_MS;
 1e6:	55 83       	std	Z+5, r21	; 0x05
 1e8:	44 83       	std	Z+4, r20	; 0x04
				TMU_Events_Array[i-1].Periodicity_MS=temp;
 1ea:	33 27       	eor	r19, r19
 1ec:	31 83       	std	Z+1, r19	; 0x01
 1ee:	20 83       	st	Z, r18
 1f0:	ef cf       	rjmp	.-34     	; 0x1d0 <TMU_Dispatch+0x3a>
	    printf("\n");		
 1f2:	8a e0       	ldi	r24, 0x0A	; 10
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	0e 94 00 02 	call	0x400	; 0x400 <putchar>
		for( s8 i=0U;i<index;i++)
 1fa:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <index>
 1fe:	88 23       	and	r24, r24
 200:	19 f1       	breq	.+70     	; 0x248 <TMU_Dispatch+0xb2>
 202:	c0 e0       	ldi	r28, 0x00	; 0
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	80 e0       	ldi	r24, 0x00	; 0
				printf("%d",TMU_Events_Array[i].Periodicity_MS);
 208:	0f e6       	ldi	r16, 0x6F	; 111
 20a:	10 e0       	ldi	r17, 0x00	; 0
 20c:	88 0f       	add	r24, r24
 20e:	99 1f       	adc	r25, r25
 210:	88 0f       	add	r24, r24
 212:	99 1f       	adc	r25, r25
 214:	fc 01       	movw	r30, r24
 216:	ec 58       	subi	r30, 0x8C	; 140
 218:	ff 4f       	sbci	r31, 0xFF	; 255
 21a:	81 81       	ldd	r24, Z+1	; 0x01
 21c:	8f 93       	push	r24
 21e:	80 81       	ld	r24, Z
 220:	8f 93       	push	r24
 222:	1f 93       	push	r17
 224:	0f 93       	push	r16
 226:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <printf>
		for( s8 i=0U;i<index;i++)
 22a:	cf 5f       	subi	r28, 0xFF	; 255
 22c:	8c 2f       	mov	r24, r28
 22e:	0c 2e       	mov	r0, r28
 230:	00 0c       	add	r0, r0
 232:	99 0b       	sbc	r25, r25
 234:	20 91 73 00 	lds	r18, 0x0073	; 0x800073 <index>
 238:	0f 90       	pop	r0
 23a:	0f 90       	pop	r0
 23c:	0f 90       	pop	r0
 23e:	0f 90       	pop	r0
 240:	28 17       	cp	r18, r24
 242:	19 06       	cpc	r1, r25
 244:	09 f0       	breq	.+2      	; 0x248 <TMU_Dispatch+0xb2>
 246:	14 f7       	brge	.-60     	; 0x20c <TMU_Dispatch+0x76>
	    printf("\n");
 248:	8a e0       	ldi	r24, 0x0A	; 10
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	0e 94 00 02 	call	0x400	; 0x400 <putchar>
			  if(!(TMU_Events_Array[i].Periodicity_MS%OverFlow_Counts)) TMU_Events_Array[i].PntrToFunc(); 			  
			}
		}
	}
	return Error_OK;
}
 250:	80 e0       	ldi	r24, 0x00	; 0
 252:	cf 91       	pop	r28
 254:	1f 91       	pop	r17
 256:	0f 91       	pop	r16
 258:	08 95       	ret
	    for(u8 i=0;i<index-1;i++)
 25a:	cf 5f       	subi	r28, 0xFF	; 255
 25c:	2c 2f       	mov	r18, r28
 25e:	30 e0       	ldi	r19, 0x00	; 0
 260:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <index>
 264:	81 50       	subi	r24, 0x01	; 1
 266:	99 0b       	sbc	r25, r25
 268:	28 17       	cp	r18, r24
 26a:	39 07       	cpc	r19, r25
 26c:	8c f7       	brge	.-30     	; 0x250 <TMU_Dispatch+0xba>
			if(OverFlow_Counts!=0)
 26e:	60 91 72 00 	lds	r22, 0x0072	; 0x800072 <__data_end>
 272:	66 23       	and	r22, r22
 274:	91 f3       	breq	.-28     	; 0x25a <TMU_Dispatch+0xc4>
			  if(!(TMU_Events_Array[i].Periodicity_MS%OverFlow_Counts)) TMU_Events_Array[i].PntrToFunc(); 			  
 276:	f9 01       	movw	r30, r18
 278:	ee 0f       	add	r30, r30
 27a:	ff 1f       	adc	r31, r31
 27c:	ee 0f       	add	r30, r30
 27e:	ff 1f       	adc	r31, r31
 280:	ec 58       	subi	r30, 0x8C	; 140
 282:	ff 4f       	sbci	r31, 0xFF	; 255
 284:	70 e0       	ldi	r23, 0x00	; 0
 286:	80 81       	ld	r24, Z
 288:	91 81       	ldd	r25, Z+1	; 0x01
 28a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__udivmodhi4>
 28e:	89 2b       	or	r24, r25
 290:	21 f7       	brne	.-56     	; 0x25a <TMU_Dispatch+0xc4>
 292:	22 0f       	add	r18, r18
 294:	33 1f       	adc	r19, r19
 296:	22 0f       	add	r18, r18
 298:	33 1f       	adc	r19, r19
 29a:	f9 01       	movw	r30, r18
 29c:	ec 58       	subi	r30, 0x8C	; 140
 29e:	ff 4f       	sbci	r31, 0xFF	; 255
 2a0:	02 80       	ldd	r0, Z+2	; 0x02
 2a2:	f3 81       	ldd	r31, Z+3	; 0x03
 2a4:	e0 2d       	mov	r30, r0
 2a6:	09 95       	icall
 2a8:	d8 cf       	rjmp	.-80     	; 0x25a <TMU_Dispatch+0xc4>

000002aa <TMU_Stop>:


u8 TMU_Stop(void(*PntrToFunc)(void))
{
 2aa:	8f 92       	push	r8
 2ac:	9f 92       	push	r9
 2ae:	af 92       	push	r10
 2b0:	bf 92       	push	r11
 2b2:	df 92       	push	r13
 2b4:	ef 92       	push	r14
 2b6:	ff 92       	push	r15
 2b8:	0f 93       	push	r16
 2ba:	1f 93       	push	r17
 2bc:	cf 93       	push	r28
 2be:	df 93       	push	r29
 2c0:	68 2f       	mov	r22, r24
 2c2:	79 2f       	mov	r23, r25
	u8 foundFlag=0;
	
	TMU_Node TMU_Node_temp={0,0};
	
	
	for(u8 i=0;i<index-1;i++)
 2c4:	30 91 73 00 	lds	r19, 0x0073	; 0x800073 <index>
 2c8:	83 2f       	mov	r24, r19
 2ca:	81 50       	subi	r24, 0x01	; 1
 2cc:	99 0b       	sbc	r25, r25
 2ce:	ac 01       	movw	r20, r24
 2d0:	18 16       	cp	r1, r24
 2d2:	19 06       	cpc	r1, r25
 2d4:	0c f0       	brlt	.+2      	; 0x2d8 <TMU_Stop+0x2e>
 2d6:	54 c0       	rjmp	.+168    	; 0x380 <TMU_Stop+0xd6>
            while(i<index-1)
			{
				TMU_Events_Array[i]=TMU_Events_Array[i+1];
				i++;
			}
			TMU_Events_Array[index-1]=TMU_Node_temp;
 2d8:	ec 01       	movw	r28, r24
 2da:	cc 0f       	add	r28, r28
 2dc:	dd 1f       	adc	r29, r29
 2de:	cc 0f       	add	r28, r28
 2e0:	dd 1f       	adc	r29, r29
 2e2:	cc 58       	subi	r28, 0x8C	; 140
 2e4:	df 4f       	sbci	r29, 0xFF	; 255
	for(u8 i=0;i<index-1;i++)
 2e6:	20 e0       	ldi	r18, 0x00	; 0
	u8 foundFlag=0;
 2e8:	a0 e0       	ldi	r26, 0x00	; 0
	for(u8 i=0;i<index-1;i++)
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	80 e0       	ldi	r24, 0x00	; 0
			foundFlag=1;
 2ee:	dd 24       	eor	r13, r13
 2f0:	d3 94       	inc	r13
 2f2:	0b c0       	rjmp	.+22     	; 0x30a <TMU_Stop+0x60>
			TMU_Events_Array[index-1]=TMU_Node_temp;
 2f4:	19 83       	std	Y+1, r17	; 0x01
 2f6:	08 83       	st	Y, r16
 2f8:	fb 82       	std	Y+3, r15	; 0x03
 2fa:	ea 82       	std	Y+2, r14	; 0x02
			foundFlag=1;
 2fc:	ad 2d       	mov	r26, r13
	for(u8 i=0;i<index-1;i++)
 2fe:	2f 5f       	subi	r18, 0xFF	; 255
 300:	82 2f       	mov	r24, r18
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	84 17       	cp	r24, r20
 306:	95 07       	cpc	r25, r21
 308:	e4 f5       	brge	.+120    	; 0x382 <TMU_Stop+0xd8>
		if(TMU_Events_Array[i].PntrToFunc==PntrToFunc) 
 30a:	fc 01       	movw	r30, r24
 30c:	ee 0f       	add	r30, r30
 30e:	ff 1f       	adc	r31, r31
 310:	ee 0f       	add	r30, r30
 312:	ff 1f       	adc	r31, r31
 314:	ec 58       	subi	r30, 0x8C	; 140
 316:	ff 4f       	sbci	r31, 0xFF	; 255
 318:	02 80       	ldd	r0, Z+2	; 0x02
 31a:	f3 81       	ldd	r31, Z+3	; 0x03
 31c:	e0 2d       	mov	r30, r0
 31e:	e6 17       	cp	r30, r22
 320:	f7 07       	cpc	r31, r23
 322:	69 f7       	brne	.-38     	; 0x2fe <TMU_Stop+0x54>
			TMU_Node_temp=TMU_Events_Array[i];
 324:	88 0f       	add	r24, r24
 326:	99 1f       	adc	r25, r25
 328:	88 0f       	add	r24, r24
 32a:	99 1f       	adc	r25, r25
 32c:	fc 01       	movw	r30, r24
 32e:	ec 58       	subi	r30, 0x8C	; 140
 330:	ff 4f       	sbci	r31, 0xFF	; 255
 332:	00 81       	ld	r16, Z
 334:	11 81       	ldd	r17, Z+1	; 0x01
 336:	e2 80       	ldd	r14, Z+2	; 0x02
 338:	f3 80       	ldd	r15, Z+3	; 0x03
            while(i<index-1)
 33a:	82 2f       	mov	r24, r18
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	24 17       	cp	r18, r20
 340:	15 06       	cpc	r1, r21
 342:	c4 f6       	brge	.-80     	; 0x2f4 <TMU_Stop+0x4a>
				TMU_Events_Array[i]=TMU_Events_Array[i+1];
 344:	dc 01       	movw	r26, r24
 346:	aa 0f       	add	r26, r26
 348:	bb 1f       	adc	r27, r27
 34a:	aa 0f       	add	r26, r26
 34c:	bb 1f       	adc	r27, r27
 34e:	ac 58       	subi	r26, 0x8C	; 140
 350:	bf 4f       	sbci	r27, 0xFF	; 255
 352:	88 0f       	add	r24, r24
 354:	99 1f       	adc	r25, r25
 356:	88 0f       	add	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	fc 01       	movw	r30, r24
 35c:	e8 58       	subi	r30, 0x88	; 136
 35e:	ff 4f       	sbci	r31, 0xFF	; 255
 360:	80 80       	ld	r8, Z
 362:	91 80       	ldd	r9, Z+1	; 0x01
 364:	a2 80       	ldd	r10, Z+2	; 0x02
 366:	b3 80       	ldd	r11, Z+3	; 0x03
 368:	8d 92       	st	X+, r8
 36a:	9d 92       	st	X+, r9
 36c:	ad 92       	st	X+, r10
 36e:	bc 92       	st	X, r11
 370:	13 97       	sbiw	r26, 0x03	; 3
				i++;
 372:	2f 5f       	subi	r18, 0xFF	; 255
            while(i<index-1)
 374:	82 2f       	mov	r24, r18
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	84 17       	cp	r24, r20
 37a:	95 07       	cpc	r25, r21
 37c:	1c f3       	brlt	.-58     	; 0x344 <TMU_Stop+0x9a>
 37e:	ba cf       	rjmp	.-140    	; 0x2f4 <TMU_Stop+0x4a>
	u8 foundFlag=0;
 380:	a0 e0       	ldi	r26, 0x00	; 0
			
		}
	}
	index--;
 382:	31 50       	subi	r19, 0x01	; 1
 384:	30 93 73 00 	sts	0x0073, r19	; 0x800073 <index>
	if(foundFlag==0)          return Error_NOK;
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	a1 11       	cpse	r26, r1
 38c:	80 e0       	ldi	r24, 0x00	; 0
    else                      return Error_OK;
	
 38e:	df 91       	pop	r29
 390:	cf 91       	pop	r28
 392:	1f 91       	pop	r17
 394:	0f 91       	pop	r16
 396:	ff 90       	pop	r15
 398:	ef 90       	pop	r14
 39a:	df 90       	pop	r13
 39c:	bf 90       	pop	r11
 39e:	af 90       	pop	r10
 3a0:	9f 90       	pop	r9
 3a2:	8f 90       	pop	r8
 3a4:	08 95       	ret

000003a6 <__udivmodhi4>:
 3a6:	aa 1b       	sub	r26, r26
 3a8:	bb 1b       	sub	r27, r27
 3aa:	51 e1       	ldi	r21, 0x11	; 17
 3ac:	07 c0       	rjmp	.+14     	; 0x3bc <__udivmodhi4_ep>

000003ae <__udivmodhi4_loop>:
 3ae:	aa 1f       	adc	r26, r26
 3b0:	bb 1f       	adc	r27, r27
 3b2:	a6 17       	cp	r26, r22
 3b4:	b7 07       	cpc	r27, r23
 3b6:	10 f0       	brcs	.+4      	; 0x3bc <__udivmodhi4_ep>
 3b8:	a6 1b       	sub	r26, r22
 3ba:	b7 0b       	sbc	r27, r23

000003bc <__udivmodhi4_ep>:
 3bc:	88 1f       	adc	r24, r24
 3be:	99 1f       	adc	r25, r25
 3c0:	5a 95       	dec	r21
 3c2:	a9 f7       	brne	.-22     	; 0x3ae <__udivmodhi4_loop>
 3c4:	80 95       	com	r24
 3c6:	90 95       	com	r25
 3c8:	bc 01       	movw	r22, r24
 3ca:	cd 01       	movw	r24, r26
 3cc:	08 95       	ret

000003ce <abort>:
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	f8 94       	cli
 3d4:	0c 94 ba 04 	jmp	0x974	; 0x974 <_exit>

000003d8 <printf>:
 3d8:	b0 e0       	ldi	r27, 0x00	; 0
 3da:	a0 e0       	ldi	r26, 0x00	; 0
 3dc:	e2 ef       	ldi	r30, 0xF2	; 242
 3de:	f1 e0       	ldi	r31, 0x01	; 1
 3e0:	0c 94 93 04 	jmp	0x926	; 0x926 <__prologue_saves__+0x20>
 3e4:	fe 01       	movw	r30, r28
 3e6:	35 96       	adiw	r30, 0x05	; 5
 3e8:	61 91       	ld	r22, Z+
 3ea:	71 91       	ld	r23, Z+
 3ec:	af 01       	movw	r20, r30
 3ee:	80 91 83 00 	lds	r24, 0x0083	; 0x800083 <__iob+0x2>
 3f2:	90 91 84 00 	lds	r25, 0x0084	; 0x800084 <__iob+0x3>
 3f6:	0e 94 07 02 	call	0x40e	; 0x40e <vfprintf>
 3fa:	e2 e0       	ldi	r30, 0x02	; 2
 3fc:	0c 94 af 04 	jmp	0x95e	; 0x95e <__epilogue_restores__+0x20>

00000400 <putchar>:
 400:	60 91 83 00 	lds	r22, 0x0083	; 0x800083 <__iob+0x2>
 404:	70 91 84 00 	lds	r23, 0x0084	; 0x800084 <__iob+0x3>
 408:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 40c:	08 95       	ret

0000040e <vfprintf>:
 40e:	af e0       	ldi	r26, 0x0F	; 15
 410:	b0 e0       	ldi	r27, 0x00	; 0
 412:	ed e0       	ldi	r30, 0x0D	; 13
 414:	f2 e0       	ldi	r31, 0x02	; 2
 416:	0c 94 83 04 	jmp	0x906	; 0x906 <__prologue_saves__>
 41a:	7c 01       	movw	r14, r24
 41c:	3b 01       	movw	r6, r22
 41e:	8a 01       	movw	r16, r20
 420:	dc 01       	movw	r26, r24
 422:	17 96       	adiw	r26, 0x07	; 7
 424:	1c 92       	st	X, r1
 426:	1e 92       	st	-X, r1
 428:	16 97       	sbiw	r26, 0x06	; 6
 42a:	13 96       	adiw	r26, 0x03	; 3
 42c:	8c 91       	ld	r24, X
 42e:	81 ff       	sbrs	r24, 1
 430:	c3 c1       	rjmp	.+902    	; 0x7b8 <vfprintf+0x3aa>
 432:	9a e0       	ldi	r25, 0x0A	; 10
 434:	29 2e       	mov	r2, r25
 436:	fe 01       	movw	r30, r28
 438:	31 96       	adiw	r30, 0x01	; 1
 43a:	4f 01       	movw	r8, r30
 43c:	d7 01       	movw	r26, r14
 43e:	13 96       	adiw	r26, 0x03	; 3
 440:	9c 91       	ld	r25, X
 442:	f3 01       	movw	r30, r6
 444:	93 fd       	sbrc	r25, 3
 446:	85 91       	lpm	r24, Z+
 448:	93 ff       	sbrs	r25, 3
 44a:	81 91       	ld	r24, Z+
 44c:	3f 01       	movw	r6, r30
 44e:	88 23       	and	r24, r24
 450:	09 f4       	brne	.+2      	; 0x454 <vfprintf+0x46>
 452:	48 c1       	rjmp	.+656    	; 0x6e4 <vfprintf+0x2d6>
 454:	85 32       	cpi	r24, 0x25	; 37
 456:	39 f4       	brne	.+14     	; 0x466 <vfprintf+0x58>
 458:	93 fd       	sbrc	r25, 3
 45a:	85 91       	lpm	r24, Z+
 45c:	93 ff       	sbrs	r25, 3
 45e:	81 91       	ld	r24, Z+
 460:	3f 01       	movw	r6, r30
 462:	85 32       	cpi	r24, 0x25	; 37
 464:	29 f4       	brne	.+10     	; 0x470 <vfprintf+0x62>
 466:	b7 01       	movw	r22, r14
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 46e:	e6 cf       	rjmp	.-52     	; 0x43c <vfprintf+0x2e>
 470:	b1 2c       	mov	r11, r1
 472:	41 2c       	mov	r4, r1
 474:	51 2c       	mov	r5, r1
 476:	bf e1       	ldi	r27, 0x1F	; 31
 478:	b5 15       	cp	r27, r5
 47a:	38 f0       	brcs	.+14     	; 0x48a <vfprintf+0x7c>
 47c:	8b 32       	cpi	r24, 0x2B	; 43
 47e:	09 f1       	breq	.+66     	; 0x4c2 <vfprintf+0xb4>
 480:	88 f4       	brcc	.+34     	; 0x4a4 <vfprintf+0x96>
 482:	80 32       	cpi	r24, 0x20	; 32
 484:	01 f1       	breq	.+64     	; 0x4c6 <vfprintf+0xb8>
 486:	83 32       	cpi	r24, 0x23	; 35
 488:	21 f1       	breq	.+72     	; 0x4d2 <vfprintf+0xc4>
 48a:	57 fc       	sbrc	r5, 7
 48c:	3a c0       	rjmp	.+116    	; 0x502 <vfprintf+0xf4>
 48e:	20 ed       	ldi	r18, 0xD0	; 208
 490:	28 0f       	add	r18, r24
 492:	2a 30       	cpi	r18, 0x0A	; 10
 494:	40 f5       	brcc	.+80     	; 0x4e6 <vfprintf+0xd8>
 496:	56 fe       	sbrs	r5, 6
 498:	1f c0       	rjmp	.+62     	; 0x4d8 <vfprintf+0xca>
 49a:	b2 9c       	mul	r11, r2
 49c:	20 0d       	add	r18, r0
 49e:	11 24       	eor	r1, r1
 4a0:	b2 2e       	mov	r11, r18
 4a2:	06 c0       	rjmp	.+12     	; 0x4b0 <vfprintf+0xa2>
 4a4:	8d 32       	cpi	r24, 0x2D	; 45
 4a6:	91 f0       	breq	.+36     	; 0x4cc <vfprintf+0xbe>
 4a8:	80 33       	cpi	r24, 0x30	; 48
 4aa:	79 f7       	brne	.-34     	; 0x48a <vfprintf+0x7c>
 4ac:	68 94       	set
 4ae:	50 f8       	bld	r5, 0
 4b0:	f3 01       	movw	r30, r6
 4b2:	93 fd       	sbrc	r25, 3
 4b4:	85 91       	lpm	r24, Z+
 4b6:	93 ff       	sbrs	r25, 3
 4b8:	81 91       	ld	r24, Z+
 4ba:	3f 01       	movw	r6, r30
 4bc:	81 11       	cpse	r24, r1
 4be:	db cf       	rjmp	.-74     	; 0x476 <vfprintf+0x68>
 4c0:	20 c0       	rjmp	.+64     	; 0x502 <vfprintf+0xf4>
 4c2:	68 94       	set
 4c4:	51 f8       	bld	r5, 1
 4c6:	68 94       	set
 4c8:	52 f8       	bld	r5, 2
 4ca:	f2 cf       	rjmp	.-28     	; 0x4b0 <vfprintf+0xa2>
 4cc:	68 94       	set
 4ce:	53 f8       	bld	r5, 3
 4d0:	ef cf       	rjmp	.-34     	; 0x4b0 <vfprintf+0xa2>
 4d2:	68 94       	set
 4d4:	54 f8       	bld	r5, 4
 4d6:	ec cf       	rjmp	.-40     	; 0x4b0 <vfprintf+0xa2>
 4d8:	42 9c       	mul	r4, r2
 4da:	20 0d       	add	r18, r0
 4dc:	11 24       	eor	r1, r1
 4de:	42 2e       	mov	r4, r18
 4e0:	68 94       	set
 4e2:	55 f8       	bld	r5, 5
 4e4:	e5 cf       	rjmp	.-54     	; 0x4b0 <vfprintf+0xa2>
 4e6:	8e 32       	cpi	r24, 0x2E	; 46
 4e8:	29 f4       	brne	.+10     	; 0x4f4 <vfprintf+0xe6>
 4ea:	56 fc       	sbrc	r5, 6
 4ec:	fb c0       	rjmp	.+502    	; 0x6e4 <vfprintf+0x2d6>
 4ee:	68 94       	set
 4f0:	56 f8       	bld	r5, 6
 4f2:	de cf       	rjmp	.-68     	; 0x4b0 <vfprintf+0xa2>
 4f4:	8c 36       	cpi	r24, 0x6C	; 108
 4f6:	19 f4       	brne	.+6      	; 0x4fe <vfprintf+0xf0>
 4f8:	68 94       	set
 4fa:	57 f8       	bld	r5, 7
 4fc:	d9 cf       	rjmp	.-78     	; 0x4b0 <vfprintf+0xa2>
 4fe:	88 36       	cpi	r24, 0x68	; 104
 500:	b9 f2       	breq	.-82     	; 0x4b0 <vfprintf+0xa2>
 502:	98 2f       	mov	r25, r24
 504:	9f 7d       	andi	r25, 0xDF	; 223
 506:	95 54       	subi	r25, 0x45	; 69
 508:	93 30       	cpi	r25, 0x03	; 3
 50a:	c0 f0       	brcs	.+48     	; 0x53c <vfprintf+0x12e>
 50c:	83 36       	cpi	r24, 0x63	; 99
 50e:	a1 f1       	breq	.+104    	; 0x578 <vfprintf+0x16a>
 510:	83 37       	cpi	r24, 0x73	; 115
 512:	c1 f1       	breq	.+112    	; 0x584 <vfprintf+0x176>
 514:	83 35       	cpi	r24, 0x53	; 83
 516:	09 f0       	breq	.+2      	; 0x51a <vfprintf+0x10c>
 518:	5b c0       	rjmp	.+182    	; 0x5d0 <vfprintf+0x1c2>
 51a:	d8 01       	movw	r26, r16
 51c:	cd 90       	ld	r12, X+
 51e:	dd 90       	ld	r13, X+
 520:	8d 01       	movw	r16, r26
 522:	6b 2d       	mov	r22, r11
 524:	70 e0       	ldi	r23, 0x00	; 0
 526:	56 fc       	sbrc	r5, 6
 528:	02 c0       	rjmp	.+4      	; 0x52e <vfprintf+0x120>
 52a:	6f ef       	ldi	r22, 0xFF	; 255
 52c:	7f ef       	ldi	r23, 0xFF	; 255
 52e:	c6 01       	movw	r24, r12
 530:	0e 94 df 03 	call	0x7be	; 0x7be <strnlen_P>
 534:	5c 01       	movw	r10, r24
 536:	68 94       	set
 538:	57 f8       	bld	r5, 7
 53a:	0a c0       	rjmp	.+20     	; 0x550 <vfprintf+0x142>
 53c:	0c 5f       	subi	r16, 0xFC	; 252
 53e:	1f 4f       	sbci	r17, 0xFF	; 255
 540:	ef e3       	ldi	r30, 0x3F	; 63
 542:	e9 83       	std	Y+1, r30	; 0x01
 544:	aa 24       	eor	r10, r10
 546:	a3 94       	inc	r10
 548:	b1 2c       	mov	r11, r1
 54a:	64 01       	movw	r12, r8
 54c:	e8 94       	clt
 54e:	57 f8       	bld	r5, 7
 550:	53 fc       	sbrc	r5, 3
 552:	04 c0       	rjmp	.+8      	; 0x55c <vfprintf+0x14e>
 554:	4a 14       	cp	r4, r10
 556:	1b 04       	cpc	r1, r11
 558:	09 f0       	breq	.+2      	; 0x55c <vfprintf+0x14e>
 55a:	18 f5       	brcc	.+70     	; 0x5a2 <vfprintf+0x194>
 55c:	34 2c       	mov	r3, r4
 55e:	a1 14       	cp	r10, r1
 560:	b1 04       	cpc	r11, r1
 562:	31 f5       	brne	.+76     	; 0x5b0 <vfprintf+0x1a2>
 564:	33 20       	and	r3, r3
 566:	09 f4       	brne	.+2      	; 0x56a <vfprintf+0x15c>
 568:	69 cf       	rjmp	.-302    	; 0x43c <vfprintf+0x2e>
 56a:	b7 01       	movw	r22, r14
 56c:	80 e2       	ldi	r24, 0x20	; 32
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 574:	3a 94       	dec	r3
 576:	f6 cf       	rjmp	.-20     	; 0x564 <vfprintf+0x156>
 578:	d8 01       	movw	r26, r16
 57a:	8c 91       	ld	r24, X
 57c:	89 83       	std	Y+1, r24	; 0x01
 57e:	0e 5f       	subi	r16, 0xFE	; 254
 580:	1f 4f       	sbci	r17, 0xFF	; 255
 582:	e0 cf       	rjmp	.-64     	; 0x544 <vfprintf+0x136>
 584:	f8 01       	movw	r30, r16
 586:	c1 90       	ld	r12, Z+
 588:	d1 90       	ld	r13, Z+
 58a:	8f 01       	movw	r16, r30
 58c:	6b 2d       	mov	r22, r11
 58e:	70 e0       	ldi	r23, 0x00	; 0
 590:	56 fc       	sbrc	r5, 6
 592:	02 c0       	rjmp	.+4      	; 0x598 <vfprintf+0x18a>
 594:	6f ef       	ldi	r22, 0xFF	; 255
 596:	7f ef       	ldi	r23, 0xFF	; 255
 598:	c6 01       	movw	r24, r12
 59a:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <strnlen>
 59e:	5c 01       	movw	r10, r24
 5a0:	d5 cf       	rjmp	.-86     	; 0x54c <vfprintf+0x13e>
 5a2:	b7 01       	movw	r22, r14
 5a4:	80 e2       	ldi	r24, 0x20	; 32
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 5ac:	4a 94       	dec	r4
 5ae:	d2 cf       	rjmp	.-92     	; 0x554 <vfprintf+0x146>
 5b0:	f6 01       	movw	r30, r12
 5b2:	57 fc       	sbrc	r5, 7
 5b4:	85 91       	lpm	r24, Z+
 5b6:	57 fe       	sbrs	r5, 7
 5b8:	81 91       	ld	r24, Z+
 5ba:	6f 01       	movw	r12, r30
 5bc:	b7 01       	movw	r22, r14
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 5c4:	31 10       	cpse	r3, r1
 5c6:	3a 94       	dec	r3
 5c8:	b1 e0       	ldi	r27, 0x01	; 1
 5ca:	ab 1a       	sub	r10, r27
 5cc:	b1 08       	sbc	r11, r1
 5ce:	c7 cf       	rjmp	.-114    	; 0x55e <vfprintf+0x150>
 5d0:	84 36       	cpi	r24, 0x64	; 100
 5d2:	19 f0       	breq	.+6      	; 0x5da <vfprintf+0x1cc>
 5d4:	89 36       	cpi	r24, 0x69	; 105
 5d6:	09 f0       	breq	.+2      	; 0x5da <vfprintf+0x1cc>
 5d8:	74 c0       	rjmp	.+232    	; 0x6c2 <vfprintf+0x2b4>
 5da:	f8 01       	movw	r30, r16
 5dc:	57 fe       	sbrs	r5, 7
 5de:	6a c0       	rjmp	.+212    	; 0x6b4 <vfprintf+0x2a6>
 5e0:	61 91       	ld	r22, Z+
 5e2:	71 91       	ld	r23, Z+
 5e4:	81 91       	ld	r24, Z+
 5e6:	91 91       	ld	r25, Z+
 5e8:	8f 01       	movw	r16, r30
 5ea:	e5 2d       	mov	r30, r5
 5ec:	ef 76       	andi	r30, 0x6F	; 111
 5ee:	de 2e       	mov	r13, r30
 5f0:	97 ff       	sbrs	r25, 7
 5f2:	09 c0       	rjmp	.+18     	; 0x606 <vfprintf+0x1f8>
 5f4:	90 95       	com	r25
 5f6:	80 95       	com	r24
 5f8:	70 95       	com	r23
 5fa:	61 95       	neg	r22
 5fc:	7f 4f       	sbci	r23, 0xFF	; 255
 5fe:	8f 4f       	sbci	r24, 0xFF	; 255
 600:	9f 4f       	sbci	r25, 0xFF	; 255
 602:	68 94       	set
 604:	d7 f8       	bld	r13, 7
 606:	2a e0       	ldi	r18, 0x0A	; 10
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	a4 01       	movw	r20, r8
 60c:	0e 94 25 04 	call	0x84a	; 0x84a <__ultoa_invert>
 610:	c8 2e       	mov	r12, r24
 612:	c8 18       	sub	r12, r8
 614:	ac 2c       	mov	r10, r12
 616:	5d 2c       	mov	r5, r13
 618:	d6 fe       	sbrs	r13, 6
 61a:	0c c0       	rjmp	.+24     	; 0x634 <vfprintf+0x226>
 61c:	e8 94       	clt
 61e:	50 f8       	bld	r5, 0
 620:	cb 14       	cp	r12, r11
 622:	40 f4       	brcc	.+16     	; 0x634 <vfprintf+0x226>
 624:	d4 fe       	sbrs	r13, 4
 626:	05 c0       	rjmp	.+10     	; 0x632 <vfprintf+0x224>
 628:	d2 fc       	sbrc	r13, 2
 62a:	03 c0       	rjmp	.+6      	; 0x632 <vfprintf+0x224>
 62c:	5d 2d       	mov	r21, r13
 62e:	5e 7e       	andi	r21, 0xEE	; 238
 630:	55 2e       	mov	r5, r21
 632:	ab 2c       	mov	r10, r11
 634:	54 fe       	sbrs	r5, 4
 636:	98 c0       	rjmp	.+304    	; 0x768 <vfprintf+0x35a>
 638:	fe 01       	movw	r30, r28
 63a:	ec 0d       	add	r30, r12
 63c:	f1 1d       	adc	r31, r1
 63e:	80 81       	ld	r24, Z
 640:	80 33       	cpi	r24, 0x30	; 48
 642:	09 f0       	breq	.+2      	; 0x646 <vfprintf+0x238>
 644:	8a c0       	rjmp	.+276    	; 0x75a <vfprintf+0x34c>
 646:	65 2d       	mov	r22, r5
 648:	69 7e       	andi	r22, 0xE9	; 233
 64a:	56 2e       	mov	r5, r22
 64c:	75 2d       	mov	r23, r5
 64e:	78 70       	andi	r23, 0x08	; 8
 650:	37 2e       	mov	r3, r23
 652:	53 fc       	sbrc	r5, 3
 654:	98 c0       	rjmp	.+304    	; 0x786 <vfprintf+0x378>
 656:	50 fe       	sbrs	r5, 0
 658:	92 c0       	rjmp	.+292    	; 0x77e <vfprintf+0x370>
 65a:	bc 2c       	mov	r11, r12
 65c:	a4 14       	cp	r10, r4
 65e:	18 f4       	brcc	.+6      	; 0x666 <vfprintf+0x258>
 660:	4c 0c       	add	r4, r12
 662:	b4 2c       	mov	r11, r4
 664:	ba 18       	sub	r11, r10
 666:	54 fe       	sbrs	r5, 4
 668:	94 c0       	rjmp	.+296    	; 0x792 <vfprintf+0x384>
 66a:	b7 01       	movw	r22, r14
 66c:	80 e3       	ldi	r24, 0x30	; 48
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 674:	52 fe       	sbrs	r5, 2
 676:	09 c0       	rjmp	.+18     	; 0x68a <vfprintf+0x27c>
 678:	88 e7       	ldi	r24, 0x78	; 120
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	51 fe       	sbrs	r5, 1
 67e:	02 c0       	rjmp	.+4      	; 0x684 <vfprintf+0x276>
 680:	88 e5       	ldi	r24, 0x58	; 88
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	b7 01       	movw	r22, r14
 686:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 68a:	cb 14       	cp	r12, r11
 68c:	08 f4       	brcc	.+2      	; 0x690 <vfprintf+0x282>
 68e:	8d c0       	rjmp	.+282    	; 0x7aa <vfprintf+0x39c>
 690:	ca 94       	dec	r12
 692:	d1 2c       	mov	r13, r1
 694:	8f ef       	ldi	r24, 0xFF	; 255
 696:	c8 1a       	sub	r12, r24
 698:	d8 0a       	sbc	r13, r24
 69a:	c8 0c       	add	r12, r8
 69c:	d9 1c       	adc	r13, r9
 69e:	d6 01       	movw	r26, r12
 6a0:	8e 91       	ld	r24, -X
 6a2:	6d 01       	movw	r12, r26
 6a4:	b7 01       	movw	r22, r14
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 6ac:	8c 14       	cp	r8, r12
 6ae:	9d 04       	cpc	r9, r13
 6b0:	b1 f7       	brne	.-20     	; 0x69e <vfprintf+0x290>
 6b2:	58 cf       	rjmp	.-336    	; 0x564 <vfprintf+0x156>
 6b4:	61 91       	ld	r22, Z+
 6b6:	71 91       	ld	r23, Z+
 6b8:	07 2e       	mov	r0, r23
 6ba:	00 0c       	add	r0, r0
 6bc:	88 0b       	sbc	r24, r24
 6be:	99 0b       	sbc	r25, r25
 6c0:	93 cf       	rjmp	.-218    	; 0x5e8 <vfprintf+0x1da>
 6c2:	d5 2c       	mov	r13, r5
 6c4:	e8 94       	clt
 6c6:	d4 f8       	bld	r13, 4
 6c8:	2a e0       	ldi	r18, 0x0A	; 10
 6ca:	30 e0       	ldi	r19, 0x00	; 0
 6cc:	85 37       	cpi	r24, 0x75	; 117
 6ce:	39 f1       	breq	.+78     	; 0x71e <vfprintf+0x310>
 6d0:	f5 2d       	mov	r31, r5
 6d2:	f9 7f       	andi	r31, 0xF9	; 249
 6d4:	df 2e       	mov	r13, r31
 6d6:	80 37       	cpi	r24, 0x70	; 112
 6d8:	a9 f0       	breq	.+42     	; 0x704 <vfprintf+0x2f6>
 6da:	58 f4       	brcc	.+22     	; 0x6f2 <vfprintf+0x2e4>
 6dc:	88 35       	cpi	r24, 0x58	; 88
 6de:	a9 f0       	breq	.+42     	; 0x70a <vfprintf+0x2fc>
 6e0:	8f 36       	cpi	r24, 0x6F	; 111
 6e2:	d9 f0       	breq	.+54     	; 0x71a <vfprintf+0x30c>
 6e4:	f7 01       	movw	r30, r14
 6e6:	86 81       	ldd	r24, Z+6	; 0x06
 6e8:	97 81       	ldd	r25, Z+7	; 0x07
 6ea:	2f 96       	adiw	r28, 0x0f	; 15
 6ec:	e2 e1       	ldi	r30, 0x12	; 18
 6ee:	0c 94 9f 04 	jmp	0x93e	; 0x93e <__epilogue_restores__>
 6f2:	88 37       	cpi	r24, 0x78	; 120
 6f4:	b9 f7       	brne	.-18     	; 0x6e4 <vfprintf+0x2d6>
 6f6:	d4 fe       	sbrs	r13, 4
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <vfprintf+0x2f0>
 6fa:	68 94       	set
 6fc:	d2 f8       	bld	r13, 2
 6fe:	20 e1       	ldi	r18, 0x10	; 16
 700:	30 e0       	ldi	r19, 0x00	; 0
 702:	0d c0       	rjmp	.+26     	; 0x71e <vfprintf+0x310>
 704:	68 94       	set
 706:	d4 f8       	bld	r13, 4
 708:	f6 cf       	rjmp	.-20     	; 0x6f6 <vfprintf+0x2e8>
 70a:	54 fe       	sbrs	r5, 4
 70c:	03 c0       	rjmp	.+6      	; 0x714 <vfprintf+0x306>
 70e:	2f 2f       	mov	r18, r31
 710:	26 60       	ori	r18, 0x06	; 6
 712:	d2 2e       	mov	r13, r18
 714:	20 e1       	ldi	r18, 0x10	; 16
 716:	32 e0       	ldi	r19, 0x02	; 2
 718:	02 c0       	rjmp	.+4      	; 0x71e <vfprintf+0x310>
 71a:	28 e0       	ldi	r18, 0x08	; 8
 71c:	30 e0       	ldi	r19, 0x00	; 0
 71e:	f8 01       	movw	r30, r16
 720:	d7 fe       	sbrs	r13, 7
 722:	15 c0       	rjmp	.+42     	; 0x74e <vfprintf+0x340>
 724:	41 91       	ld	r20, Z+
 726:	51 91       	ld	r21, Z+
 728:	61 91       	ld	r22, Z+
 72a:	71 91       	ld	r23, Z+
 72c:	4c 87       	std	Y+12, r20	; 0x0c
 72e:	5d 87       	std	Y+13, r21	; 0x0d
 730:	6e 87       	std	Y+14, r22	; 0x0e
 732:	7f 87       	std	Y+15, r23	; 0x0f
 734:	8f 01       	movw	r16, r30
 736:	a4 01       	movw	r20, r8
 738:	6c 85       	ldd	r22, Y+12	; 0x0c
 73a:	7d 85       	ldd	r23, Y+13	; 0x0d
 73c:	8e 85       	ldd	r24, Y+14	; 0x0e
 73e:	9f 85       	ldd	r25, Y+15	; 0x0f
 740:	0e 94 25 04 	call	0x84a	; 0x84a <__ultoa_invert>
 744:	c8 2e       	mov	r12, r24
 746:	c8 18       	sub	r12, r8
 748:	e8 94       	clt
 74a:	d7 f8       	bld	r13, 7
 74c:	63 cf       	rjmp	.-314    	; 0x614 <vfprintf+0x206>
 74e:	81 91       	ld	r24, Z+
 750:	91 91       	ld	r25, Z+
 752:	ac 01       	movw	r20, r24
 754:	70 e0       	ldi	r23, 0x00	; 0
 756:	60 e0       	ldi	r22, 0x00	; 0
 758:	e9 cf       	rjmp	.-46     	; 0x72c <vfprintf+0x31e>
 75a:	52 fc       	sbrc	r5, 2
 75c:	02 c0       	rjmp	.+4      	; 0x762 <vfprintf+0x354>
 75e:	a3 94       	inc	r10
 760:	75 cf       	rjmp	.-278    	; 0x64c <vfprintf+0x23e>
 762:	a3 94       	inc	r10
 764:	a3 94       	inc	r10
 766:	72 cf       	rjmp	.-284    	; 0x64c <vfprintf+0x23e>
 768:	85 2d       	mov	r24, r5
 76a:	86 78       	andi	r24, 0x86	; 134
 76c:	09 f4       	brne	.+2      	; 0x770 <vfprintf+0x362>
 76e:	6e cf       	rjmp	.-292    	; 0x64c <vfprintf+0x23e>
 770:	f6 cf       	rjmp	.-20     	; 0x75e <vfprintf+0x350>
 772:	b7 01       	movw	r22, r14
 774:	80 e2       	ldi	r24, 0x20	; 32
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 77c:	a3 94       	inc	r10
 77e:	a4 14       	cp	r10, r4
 780:	c0 f3       	brcs	.-16     	; 0x772 <vfprintf+0x364>
 782:	31 2c       	mov	r3, r1
 784:	70 cf       	rjmp	.-288    	; 0x666 <vfprintf+0x258>
 786:	34 2c       	mov	r3, r4
 788:	3a 18       	sub	r3, r10
 78a:	a4 14       	cp	r10, r4
 78c:	08 f4       	brcc	.+2      	; 0x790 <vfprintf+0x382>
 78e:	6b cf       	rjmp	.-298    	; 0x666 <vfprintf+0x258>
 790:	f8 cf       	rjmp	.-16     	; 0x782 <vfprintf+0x374>
 792:	85 2d       	mov	r24, r5
 794:	86 78       	andi	r24, 0x86	; 134
 796:	09 f4       	brne	.+2      	; 0x79a <vfprintf+0x38c>
 798:	78 cf       	rjmp	.-272    	; 0x68a <vfprintf+0x27c>
 79a:	8b e2       	ldi	r24, 0x2B	; 43
 79c:	51 fe       	sbrs	r5, 1
 79e:	80 e2       	ldi	r24, 0x20	; 32
 7a0:	57 fc       	sbrc	r5, 7
 7a2:	8d e2       	ldi	r24, 0x2D	; 45
 7a4:	b7 01       	movw	r22, r14
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	6e cf       	rjmp	.-292    	; 0x686 <vfprintf+0x278>
 7aa:	b7 01       	movw	r22, r14
 7ac:	80 e3       	ldi	r24, 0x30	; 48
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <fputc>
 7b4:	ba 94       	dec	r11
 7b6:	69 cf       	rjmp	.-302    	; 0x68a <vfprintf+0x27c>
 7b8:	8f ef       	ldi	r24, 0xFF	; 255
 7ba:	9f ef       	ldi	r25, 0xFF	; 255
 7bc:	96 cf       	rjmp	.-212    	; 0x6ea <vfprintf+0x2dc>

000007be <strnlen_P>:
 7be:	fc 01       	movw	r30, r24
 7c0:	05 90       	lpm	r0, Z+
 7c2:	61 50       	subi	r22, 0x01	; 1
 7c4:	70 40       	sbci	r23, 0x00	; 0
 7c6:	01 10       	cpse	r0, r1
 7c8:	d8 f7       	brcc	.-10     	; 0x7c0 <strnlen_P+0x2>
 7ca:	80 95       	com	r24
 7cc:	90 95       	com	r25
 7ce:	8e 0f       	add	r24, r30
 7d0:	9f 1f       	adc	r25, r31
 7d2:	08 95       	ret

000007d4 <strnlen>:
 7d4:	fc 01       	movw	r30, r24
 7d6:	61 50       	subi	r22, 0x01	; 1
 7d8:	70 40       	sbci	r23, 0x00	; 0
 7da:	01 90       	ld	r0, Z+
 7dc:	01 10       	cpse	r0, r1
 7de:	d8 f7       	brcc	.-10     	; 0x7d6 <strnlen+0x2>
 7e0:	80 95       	com	r24
 7e2:	90 95       	com	r25
 7e4:	8e 0f       	add	r24, r30
 7e6:	9f 1f       	adc	r25, r31
 7e8:	08 95       	ret

000007ea <fputc>:
 7ea:	0f 93       	push	r16
 7ec:	1f 93       	push	r17
 7ee:	cf 93       	push	r28
 7f0:	df 93       	push	r29
 7f2:	18 2f       	mov	r17, r24
 7f4:	09 2f       	mov	r16, r25
 7f6:	eb 01       	movw	r28, r22
 7f8:	8b 81       	ldd	r24, Y+3	; 0x03
 7fa:	81 fd       	sbrc	r24, 1
 7fc:	09 c0       	rjmp	.+18     	; 0x810 <fputc+0x26>
 7fe:	1f ef       	ldi	r17, 0xFF	; 255
 800:	0f ef       	ldi	r16, 0xFF	; 255
 802:	81 2f       	mov	r24, r17
 804:	90 2f       	mov	r25, r16
 806:	df 91       	pop	r29
 808:	cf 91       	pop	r28
 80a:	1f 91       	pop	r17
 80c:	0f 91       	pop	r16
 80e:	08 95       	ret
 810:	82 ff       	sbrs	r24, 2
 812:	14 c0       	rjmp	.+40     	; 0x83c <fputc+0x52>
 814:	2e 81       	ldd	r18, Y+6	; 0x06
 816:	3f 81       	ldd	r19, Y+7	; 0x07
 818:	8c 81       	ldd	r24, Y+4	; 0x04
 81a:	9d 81       	ldd	r25, Y+5	; 0x05
 81c:	28 17       	cp	r18, r24
 81e:	39 07       	cpc	r19, r25
 820:	3c f4       	brge	.+14     	; 0x830 <fputc+0x46>
 822:	e8 81       	ld	r30, Y
 824:	f9 81       	ldd	r31, Y+1	; 0x01
 826:	cf 01       	movw	r24, r30
 828:	01 96       	adiw	r24, 0x01	; 1
 82a:	99 83       	std	Y+1, r25	; 0x01
 82c:	88 83       	st	Y, r24
 82e:	10 83       	st	Z, r17
 830:	8e 81       	ldd	r24, Y+6	; 0x06
 832:	9f 81       	ldd	r25, Y+7	; 0x07
 834:	01 96       	adiw	r24, 0x01	; 1
 836:	9f 83       	std	Y+7, r25	; 0x07
 838:	8e 83       	std	Y+6, r24	; 0x06
 83a:	e3 cf       	rjmp	.-58     	; 0x802 <fputc+0x18>
 83c:	e8 85       	ldd	r30, Y+8	; 0x08
 83e:	f9 85       	ldd	r31, Y+9	; 0x09
 840:	81 2f       	mov	r24, r17
 842:	09 95       	icall
 844:	89 2b       	or	r24, r25
 846:	a1 f3       	breq	.-24     	; 0x830 <fputc+0x46>
 848:	da cf       	rjmp	.-76     	; 0x7fe <fputc+0x14>

0000084a <__ultoa_invert>:
 84a:	fa 01       	movw	r30, r20
 84c:	aa 27       	eor	r26, r26
 84e:	28 30       	cpi	r18, 0x08	; 8
 850:	51 f1       	breq	.+84     	; 0x8a6 <__stack+0x47>
 852:	20 31       	cpi	r18, 0x10	; 16
 854:	81 f1       	breq	.+96     	; 0x8b6 <__stack+0x57>
 856:	e8 94       	clt
 858:	6f 93       	push	r22
 85a:	6e 7f       	andi	r22, 0xFE	; 254
 85c:	6e 5f       	subi	r22, 0xFE	; 254
 85e:	7f 4f       	sbci	r23, 0xFF	; 255
 860:	8f 4f       	sbci	r24, 0xFF	; 255
 862:	9f 4f       	sbci	r25, 0xFF	; 255
 864:	af 4f       	sbci	r26, 0xFF	; 255
 866:	b1 e0       	ldi	r27, 0x01	; 1
 868:	3e d0       	rcall	.+124    	; 0x8e6 <__stack+0x87>
 86a:	b4 e0       	ldi	r27, 0x04	; 4
 86c:	3c d0       	rcall	.+120    	; 0x8e6 <__stack+0x87>
 86e:	67 0f       	add	r22, r23
 870:	78 1f       	adc	r23, r24
 872:	89 1f       	adc	r24, r25
 874:	9a 1f       	adc	r25, r26
 876:	a1 1d       	adc	r26, r1
 878:	68 0f       	add	r22, r24
 87a:	79 1f       	adc	r23, r25
 87c:	8a 1f       	adc	r24, r26
 87e:	91 1d       	adc	r25, r1
 880:	a1 1d       	adc	r26, r1
 882:	6a 0f       	add	r22, r26
 884:	71 1d       	adc	r23, r1
 886:	81 1d       	adc	r24, r1
 888:	91 1d       	adc	r25, r1
 88a:	a1 1d       	adc	r26, r1
 88c:	20 d0       	rcall	.+64     	; 0x8ce <__stack+0x6f>
 88e:	09 f4       	brne	.+2      	; 0x892 <__stack+0x33>
 890:	68 94       	set
 892:	3f 91       	pop	r19
 894:	2a e0       	ldi	r18, 0x0A	; 10
 896:	26 9f       	mul	r18, r22
 898:	11 24       	eor	r1, r1
 89a:	30 19       	sub	r19, r0
 89c:	30 5d       	subi	r19, 0xD0	; 208
 89e:	31 93       	st	Z+, r19
 8a0:	de f6       	brtc	.-74     	; 0x858 <__ultoa_invert+0xe>
 8a2:	cf 01       	movw	r24, r30
 8a4:	08 95       	ret
 8a6:	46 2f       	mov	r20, r22
 8a8:	47 70       	andi	r20, 0x07	; 7
 8aa:	40 5d       	subi	r20, 0xD0	; 208
 8ac:	41 93       	st	Z+, r20
 8ae:	b3 e0       	ldi	r27, 0x03	; 3
 8b0:	0f d0       	rcall	.+30     	; 0x8d0 <__stack+0x71>
 8b2:	c9 f7       	brne	.-14     	; 0x8a6 <__stack+0x47>
 8b4:	f6 cf       	rjmp	.-20     	; 0x8a2 <__stack+0x43>
 8b6:	46 2f       	mov	r20, r22
 8b8:	4f 70       	andi	r20, 0x0F	; 15
 8ba:	40 5d       	subi	r20, 0xD0	; 208
 8bc:	4a 33       	cpi	r20, 0x3A	; 58
 8be:	18 f0       	brcs	.+6      	; 0x8c6 <__stack+0x67>
 8c0:	49 5d       	subi	r20, 0xD9	; 217
 8c2:	31 fd       	sbrc	r19, 1
 8c4:	40 52       	subi	r20, 0x20	; 32
 8c6:	41 93       	st	Z+, r20
 8c8:	02 d0       	rcall	.+4      	; 0x8ce <__stack+0x6f>
 8ca:	a9 f7       	brne	.-22     	; 0x8b6 <__stack+0x57>
 8cc:	ea cf       	rjmp	.-44     	; 0x8a2 <__stack+0x43>
 8ce:	b4 e0       	ldi	r27, 0x04	; 4
 8d0:	a6 95       	lsr	r26
 8d2:	97 95       	ror	r25
 8d4:	87 95       	ror	r24
 8d6:	77 95       	ror	r23
 8d8:	67 95       	ror	r22
 8da:	ba 95       	dec	r27
 8dc:	c9 f7       	brne	.-14     	; 0x8d0 <__stack+0x71>
 8de:	00 97       	sbiw	r24, 0x00	; 0
 8e0:	61 05       	cpc	r22, r1
 8e2:	71 05       	cpc	r23, r1
 8e4:	08 95       	ret
 8e6:	9b 01       	movw	r18, r22
 8e8:	ac 01       	movw	r20, r24
 8ea:	0a 2e       	mov	r0, r26
 8ec:	06 94       	lsr	r0
 8ee:	57 95       	ror	r21
 8f0:	47 95       	ror	r20
 8f2:	37 95       	ror	r19
 8f4:	27 95       	ror	r18
 8f6:	ba 95       	dec	r27
 8f8:	c9 f7       	brne	.-14     	; 0x8ec <__stack+0x8d>
 8fa:	62 0f       	add	r22, r18
 8fc:	73 1f       	adc	r23, r19
 8fe:	84 1f       	adc	r24, r20
 900:	95 1f       	adc	r25, r21
 902:	a0 1d       	adc	r26, r0
 904:	08 95       	ret

00000906 <__prologue_saves__>:
 906:	2f 92       	push	r2
 908:	3f 92       	push	r3
 90a:	4f 92       	push	r4
 90c:	5f 92       	push	r5
 90e:	6f 92       	push	r6
 910:	7f 92       	push	r7
 912:	8f 92       	push	r8
 914:	9f 92       	push	r9
 916:	af 92       	push	r10
 918:	bf 92       	push	r11
 91a:	cf 92       	push	r12
 91c:	df 92       	push	r13
 91e:	ef 92       	push	r14
 920:	ff 92       	push	r15
 922:	0f 93       	push	r16
 924:	1f 93       	push	r17
 926:	cf 93       	push	r28
 928:	df 93       	push	r29
 92a:	cd b7       	in	r28, 0x3d	; 61
 92c:	de b7       	in	r29, 0x3e	; 62
 92e:	ca 1b       	sub	r28, r26
 930:	db 0b       	sbc	r29, r27
 932:	0f b6       	in	r0, 0x3f	; 63
 934:	f8 94       	cli
 936:	de bf       	out	0x3e, r29	; 62
 938:	0f be       	out	0x3f, r0	; 63
 93a:	cd bf       	out	0x3d, r28	; 61
 93c:	09 94       	ijmp

0000093e <__epilogue_restores__>:
 93e:	2a 88       	ldd	r2, Y+18	; 0x12
 940:	39 88       	ldd	r3, Y+17	; 0x11
 942:	48 88       	ldd	r4, Y+16	; 0x10
 944:	5f 84       	ldd	r5, Y+15	; 0x0f
 946:	6e 84       	ldd	r6, Y+14	; 0x0e
 948:	7d 84       	ldd	r7, Y+13	; 0x0d
 94a:	8c 84       	ldd	r8, Y+12	; 0x0c
 94c:	9b 84       	ldd	r9, Y+11	; 0x0b
 94e:	aa 84       	ldd	r10, Y+10	; 0x0a
 950:	b9 84       	ldd	r11, Y+9	; 0x09
 952:	c8 84       	ldd	r12, Y+8	; 0x08
 954:	df 80       	ldd	r13, Y+7	; 0x07
 956:	ee 80       	ldd	r14, Y+6	; 0x06
 958:	fd 80       	ldd	r15, Y+5	; 0x05
 95a:	0c 81       	ldd	r16, Y+4	; 0x04
 95c:	1b 81       	ldd	r17, Y+3	; 0x03
 95e:	aa 81       	ldd	r26, Y+2	; 0x02
 960:	b9 81       	ldd	r27, Y+1	; 0x01
 962:	ce 0f       	add	r28, r30
 964:	d1 1d       	adc	r29, r1
 966:	0f b6       	in	r0, 0x3f	; 63
 968:	f8 94       	cli
 96a:	de bf       	out	0x3e, r29	; 62
 96c:	0f be       	out	0x3f, r0	; 63
 96e:	cd bf       	out	0x3d, r28	; 61
 970:	ed 01       	movw	r28, r26
 972:	08 95       	ret

00000974 <_exit>:
 974:	f8 94       	cli

00000976 <__stop_program>:
 976:	ff cf       	rjmp	.-2      	; 0x976 <__stop_program>
